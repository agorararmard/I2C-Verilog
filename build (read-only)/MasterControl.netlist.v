/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

module MasterControl(clk, rst, iSDA, bit8, go, busy, newcount, dbit, abit, done, success, en, sel);
  wire _000_;
  wire _001_;
  wire [1:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire [1:0] _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  output abit;
  input bit8;
  output busy;
  input clk;
  wire [1:0] cnt;
  wire countStarted;
  output dbit;
  output done;
  output en;
  input go;
  input iSDA;
  output newcount;
  input rst;
  output [1:0] sel;
  wire [6:0] state;
  output success;
  INVX1 _048_ (
    .A(state[1]),
    .Y(_017_)
  );
  INVX1 _049_ (
    .A(state[6]),
    .Y(_018_)
  );
  NAND2X1 _050_ (
    .A(iSDA),
    .B(cnt[1]),
    .Y(_019_)
  );
  OAI22X1 _051_ (
    .A(_017_),
    .B(bit8),
    .C(_018_),
    .D(_019_),
    .Y(_010_)
  );
  INVX1 _052_ (
    .A(state[2]),
    .Y(_020_)
  );
  INVX1 _053_ (
    .A(state[4]),
    .Y(_021_)
  );
  OAI21X1 _054_ (
    .A(bit8),
    .B(_020_),
    .C(_021_),
    .Y(_011_)
  );
  INVX1 _055_ (
    .A(state[5]),
    .Y(_022_)
  );
  INVX1 _056_ (
    .A(state[3]),
    .Y(_023_)
  );
  NOR2X1 _057_ (
    .A(cnt[0]),
    .B(cnt[1]),
    .Y(_024_)
  );
  OAI22X1 _058_ (
    .A(_022_),
    .B(_019_),
    .C(_023_),
    .D(_024_),
    .Y(_012_)
  );
  INVX1 _059_ (
    .A(bit8),
    .Y(_025_)
  );
  OAI22X1 _060_ (
    .A(cnt[1]),
    .B(_022_),
    .C(_017_),
    .D(_025_),
    .Y(_013_)
  );
  OAI22X1 _061_ (
    .A(cnt[1]),
    .B(_018_),
    .C(_025_),
    .D(_020_),
    .Y(_014_)
  );
  OAI21X1 _062_ (
    .A(state[5]),
    .B(state[6]),
    .C(cnt[1]),
    .Y(_026_)
  );
  INVX1 _063_ (
    .A(go),
    .Y(_027_)
  );
  AOI22X1 _064_ (
    .A(_027_),
    .B(state[0]),
    .C(state[3]),
    .D(_024_),
    .Y(_028_)
  );
  OAI21X1 _065_ (
    .A(iSDA),
    .B(_026_),
    .C(_028_),
    .Y(_015_)
  );
  INVX2 _066_ (
    .A(state[0]),
    .Y(_029_)
  );
  AND2X2 _067_ (
    .A(_029_),
    .B(done),
    .Y(_009_)
  );
  NAND3X1 _068_ (
    .A(sel[0]),
    .B(_017_),
    .C(_021_),
    .Y(_030_)
  );
  NOR2X1 _069_ (
    .A(state[5]),
    .B(state[6]),
    .Y(_031_)
  );
  NAND2X1 _070_ (
    .A(_029_),
    .B(_031_),
    .Y(_032_)
  );
  INVX1 _071_ (
    .A(_032_),
    .Y(_033_)
  );
  NAND3X1 _072_ (
    .A(_020_),
    .B(_030_),
    .C(_033_),
    .Y(_007_[0])
  );
  NAND3X1 _073_ (
    .A(sel[1]),
    .B(_021_),
    .C(_020_),
    .Y(_034_)
  );
  NAND3X1 _074_ (
    .A(_017_),
    .B(_034_),
    .C(_033_),
    .Y(_007_[1])
  );
  NOR3X1 _075_ (
    .A(state[5]),
    .B(state[3]),
    .C(state[6]),
    .Y(_035_)
  );
  NOR3X1 _076_ (
    .A(state[1]),
    .B(state[2]),
    .C(state[0]),
    .Y(_036_)
  );
  NAND3X1 _077_ (
    .A(cnt[0]),
    .B(_035_),
    .C(_036_),
    .Y(_037_)
  );
  OAI21X1 _078_ (
    .A(cnt[0]),
    .B(_035_),
    .C(_037_),
    .Y(_002_[0])
  );
  XNOR2X1 _079_ (
    .A(cnt[0]),
    .B(cnt[1]),
    .Y(_038_)
  );
  NAND3X1 _080_ (
    .A(cnt[1]),
    .B(_035_),
    .C(_036_),
    .Y(_039_)
  );
  OAI21X1 _081_ (
    .A(_035_),
    .B(_038_),
    .C(_039_),
    .Y(_002_[1])
  );
  INVX1 _082_ (
    .A(countStarted),
    .Y(_040_)
  );
  NOR2X1 _083_ (
    .A(state[1]),
    .B(state[2]),
    .Y(_041_)
  );
  OAI21X1 _084_ (
    .A(_040_),
    .B(_032_),
    .C(_041_),
    .Y(_003_)
  );
  INVX1 _085_ (
    .A(success),
    .Y(_042_)
  );
  OAI21X1 _086_ (
    .A(state[0]),
    .B(_042_),
    .C(_023_),
    .Y(_008_)
  );
  INVX1 _087_ (
    .A(abit),
    .Y(_043_)
  );
  OAI21X1 _088_ (
    .A(_043_),
    .B(_032_),
    .C(_020_),
    .Y(_000_)
  );
  INVX1 _089_ (
    .A(dbit),
    .Y(_044_)
  );
  OAI21X1 _090_ (
    .A(state[0]),
    .B(_044_),
    .C(_017_),
    .Y(_004_)
  );
  NAND2X1 _091_ (
    .A(newcount),
    .B(_036_),
    .Y(_045_)
  );
  OAI21X1 _092_ (
    .A(countStarted),
    .B(_041_),
    .C(_045_),
    .Y(_006_)
  );
  NAND2X1 _093_ (
    .A(busy),
    .B(_023_),
    .Y(_046_)
  );
  OAI21X1 _094_ (
    .A(state[0]),
    .B(_046_),
    .C(_021_),
    .Y(_001_)
  );
  AOI21X1 _095_ (
    .A(_024_),
    .B(state[3]),
    .C(done),
    .Y(_047_)
  );
  OAI21X1 _096_ (
    .A(iSDA),
    .B(_026_),
    .C(_047_),
    .Y(_005_)
  );
  NOR2X1 _097_ (
    .A(_027_),
    .B(_029_),
    .Y(_016_)
  );
  DFFPOSX1 _098_ (
    .CLK(clk),
    .D(_005_),
    .Q(done)
  );
  DFFSR _099_ (
    .CLK(clk),
    .D(_015_),
    .Q(state[0]),
    .R(1'b1),
    .S(rst)
  );
  DFFSR _100_ (
    .CLK(clk),
    .D(_010_),
    .Q(state[1]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _101_ (
    .CLK(clk),
    .D(_011_),
    .Q(state[2]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _102_ (
    .CLK(clk),
    .D(_012_),
    .Q(state[3]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _103_ (
    .CLK(clk),
    .D(_016_),
    .Q(state[4]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _104_ (
    .CLK(clk),
    .D(_013_),
    .Q(state[5]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _105_ (
    .CLK(clk),
    .D(_014_),
    .Q(state[6]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _106_ (
    .CLK(clk),
    .D(_006_),
    .Q(newcount),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _107_ (
    .CLK(clk),
    .D(_001_),
    .Q(busy),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _108_ (
    .CLK(clk),
    .D(_004_),
    .Q(dbit),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _109_ (
    .CLK(clk),
    .D(_000_),
    .Q(abit),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _110_ (
    .CLK(clk),
    .D(_009_),
    .Q(done),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _111_ (
    .CLK(clk),
    .D(_008_),
    .Q(success),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _112_ (
    .CLK(clk),
    .D(_007_[0]),
    .Q(sel[0]),
    .R(1'b1),
    .S(rst)
  );
  DFFSR _113_ (
    .CLK(clk),
    .D(_007_[1]),
    .Q(sel[1]),
    .R(1'b1),
    .S(rst)
  );
  DFFSR _114_ (
    .CLK(clk),
    .D(_003_),
    .Q(countStarted),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _115_ (
    .CLK(clk),
    .D(_002_[0]),
    .Q(cnt[0]),
    .R(rst),
    .S(1'b1)
  );
  DFFSR _116_ (
    .CLK(clk),
    .D(_002_[1]),
    .Q(cnt[1]),
    .R(rst),
    .S(1'b1)
  );
  assign en = 1'b0;
endmodule
